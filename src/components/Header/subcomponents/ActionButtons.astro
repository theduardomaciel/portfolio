---
import Svg from "@jasikpark/astro-svg-loader";

const currentTheme = "dark";
const currentLOD = "high";
---

<script>
    const themeButton = document.getElementById("themeButton") as HTMLElement;
    const lodButton = document.getElementById("lodButton") as HTMLElement;

    themeButton.addEventListener("click", () => {
        console.log("theme button clicked");
    });

    lodButton.addEventListener("click", () => {
        console.log("lod button clicked");
    });
</script>

<div class="holder">
    <div id="themeButton" class="iconHolder theme">
        {
            currentTheme === "dark" ? (
                <Svg
                    class={"interactiveIcon"}
                    width={28}
                    height={28}
                    src={import("@assets/icons/dark_mode.svg?raw")}
                    aria-label="Dark theme toggle button"
                />
            ) : (
                <Svg
                    class={"interactiveIcon"}
                    width={28}
                    height={28}
                    src={import("@assets/icons/light_mode.svg?raw")}
                    aria-label="Light theme toggle button"
                />
            )
        }
        <p>{currentTheme}</p>
    </div>
    <div id="lodButton" class="iconHolder lod">
        <Svg
            class={"interactiveIcon detail"}
            width={28}
            fill={"var(--primary-color-01)"}
            height={28}
            src={import("@assets/icons/level_of_detail.svg?raw")}
            aria-label="Light theme toggle button"
        />
        <p>{currentLOD}</p>
    </div>
</div>

<style>
    .holder {
        display: flex;
        gap: 7.5rem;
    }

    .iconHolder {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        cursor: pointer;
    }

    .iconHolder p {
        font-size: 0.85rem;
        font-family: "InterVariable";

        text-transform: uppercase;
    }

    .iconHolder.theme p {
        display: flex;
    }

    .iconHolder.lod {
        display: flex;
    }

    .iconHolder .interactiveIcon {
        font-size: 1rem;
        width: 2.8rem;
        height: 2.8rem;
    }

    .interactiveIcon path {
        fill: var(--primary-01);
    }

    @media (min-width: 1024px) {
        .iconHolder {
            align-items: flex-end;
            gap: 0px;
            flex-direction: row;
        }

        .iconHolder.theme p {
            display: none;
        }

        .iconHolder.lod {
            display: none;
        }

        .iconHolder .interactiveIcon {
            width: 2.2rem;
            height: 2.2rem;
        }
    }
</style>
