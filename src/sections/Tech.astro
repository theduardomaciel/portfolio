---
import "@styles/tech.css";

import AstronautDeco from "@components/AstronautDeco.astro";
import Tag from "@components/Tag.astro";

interface Props {
    technologies: {
        name: string;
        techs: {
            name: string;
            experience: string;
            icon_url: string;
        }[];
    }[];
}


import { useTranslations } from "src/i18n/utils";
import type { ui } from "src/i18n/ui";

const { lang } = Astro.params;
const { technologies } = Astro.props;

const t = useTranslations(lang as keyof typeof ui);

---

<section class={`tech section wrapper`} id="tech">
    <header>
        <p>{t("tech.up_title")},</p>
        <h2>{t("tech.title")}</h2>
        <p>
            {t("tech.subtitle")}
        </p>
    </header>
    <div class="content">
        <ul id="techsList" class="techsList">
            {
                technologies.map((techSection, sectionIndex) => (
                    <li class="techSection">
                        <Tag title={techSection.name} />
                        <ul class="techs">
                            {techSection.techs.map((tech) => {
                                const splitExperience =
                                    tech.experience.split("/");
                                const experienceDate = new Date(
                                    parseInt(splitExperience[1]),
                                    parseInt(splitExperience[0]),
                                    1,
                                    0,
                                    0,
                                    0,
                                    0
                                ).getTime();
                                const timeSinceExperience =
                                    Date.now() - experienceDate;
                                const experienceInMonths =
                                    timeSinceExperience / 2592000000;
                                const convertedExperience = Math.round(
                                    experienceInMonths > 12
                                        ? experienceInMonths / 12
                                        : experienceInMonths
                                );
                                const monthsOrYears =
                                    experienceInMonths > 12 ? (convertedExperience !== 1 ? t("tech.units.years") : t("tech.units.year")) : (convertedExperience !== 1 ? t("tech.units.months") : t("tech.units.month"));

                                return (
                                    <li class="tech">
                                        <div class="techIcon">
                                            <img
                                                width={100}
                                                height={100}
                                                loading="lazy"
                                                src={tech.icon_url}
                                                alt={`Tech (${tech.name}) icon`}
                                            />
                                        </div>
                                        <div class="techDescription">
                                            <p>{tech.name} </p>
                                            <p>
                                                +{convertedExperience}
                                                {`${monthsOrYears}`}{" "}
                                                {t("tech.experience")}
                                            </p>
                                        </div>
                                    </li>
                                );
                            })}
                        </ul>
                    </li>
                ))
            }
        </ul>
        <div class="column2">
            <AstronautDeco />
            <div class="overlay"></div>
        </div>
    </div>
</section>
