---
import "@/styles/bookmarks.css";
import "@/styles/post.css";

import BaseLayout from "@/layouts/BaseLayout.astro";
import Svg from "@jasikpark/astro-svg-loader";

import Footer from "@/components/Footer/Footer.astro";
import Header from "@/components/Header/Header.astro";
import PostPreview from "@/components/Post/PostPreview.astro";

import { getAllPosts, getAllTags } from "src/lib/sanity/api";
import getTagsFromPost from "src/lib/sanity/getTagsFromPost";

import { getGuestFromId } from "src/pages/api/guest/index";

const guestId = Astro.cookies.get("guest.id")?.value;

if (!guestId) {
    Astro.redirect(`/blog`);
}

const guest = (await getGuestFromId(guestId as string)) as any;

if (!guest) {
    Astro.redirect(`/blog`);
}

const tags = await getAllTags();
const allPosts = await getAllPosts();

if (!guest) {
    return Astro.redirect(`/404`);
}

const guestReadingListTitles = guest.readingList.map((post: any) => post.slug);

const posts = allPosts.filter((post: any) => {
    return guestReadingListTitles.includes(post.slug.current);
});

const seo = {
    title: "Blog",
    description: "The blog of my simple porfolio.",
};

export const prerender = false;

import { useTranslations } from "@/i18n/utils";
import type { translations } from "@/i18n/utils";

const { lang } = Astro.params;
const t = useTranslations(lang as keyof typeof translations).blog;
---

<BaseLayout seo={seo}>
    <Header />
    <main class="bookmarks wrapper">
        <nav>
            <div class="subtitle marginTop">
                <p style="font-size: 2.8rem;">{t.title}</p>
                <div></div>
            </div>
            <a href="/blog" class="back">
                <Svg
                    src={import("@/public/icons/left_arrow.svg?raw")}
                    aria-label={"Back arrow"}
                />
                {t.return_button}
            </a>
        </nav>
        <section class={`posts ${posts.length === 0 ? "empty" : ""}`}>
            {
                posts.length > 0 ? (
                    posts.map((post: any) => {
                        const postTags = getTagsFromPost(tags, post.categories);
                        return <PostPreview post={post} tags={postTags} />;
                    })
                ) : (
                    <div class="empty">
                        <h2>{t.reading_list.empty}</h2>
                        <h5>{t.reading_list.empty.subtitle}</h5>
                    </div>
                )
            }
        </section>
    </main>
    <Footer />
</BaseLayout>
